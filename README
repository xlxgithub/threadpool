基于C++11实现的可变参数模版线程池
一.实现思路
    1.线程池类需要包含一个线程容器,一个任务容器。
    2.线程容器需要额外的变量记录 初始化线程个数 当前线程个数 最大线程个数 空闲线程个数实现线程不够时的自动创建
    3.任务容器需要一个变量记录 最大任务个数 防止用户提交太多任务。
    4.多线程程序,操作临界资源需要互斥锁。临界资源包括 当前线程个数 空闲线程个数 线程与任务容器
    5.任务容器与线程容器是生产者消费者模型 任务队列不为空 线程从中取任务执行 需要两个条件变量
    6.cached模式下用户可以自定义线程超时回收时间
    7.fixed模式与cached模式 暴露给用户初始化接口定义初始化线程个数 最大线程个数 最大任务个数 线程最大超时回收时间
    8.cached模式下根据空闲线程数量与当前任务数量自动创建新线程
    9.超时回收函数即线程距离上一次执行时间超过60s自动回收之前新建的线程
    10.线程容器包含线程类 其中需要有线程id用来后续回收线程 线程实际执行的函数(从任务队列取任务执行) 
    11.任务容器即提交的函数 
    12.暴露给用户的提交任务函数submitTask 基于可变参数模板实现 decltype自动推导返回值类型
    13.为了获取返回值用std::packaged_task封装提交的任务 std::future获取异步操作返回的结果
二.UML类图
    

三.
